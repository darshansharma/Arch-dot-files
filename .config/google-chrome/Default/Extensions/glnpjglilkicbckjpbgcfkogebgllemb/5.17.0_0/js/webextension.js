Okta.WebExtension=function(session,persistent,request,browserType){var BACKGROUND_VERSION=PLUGIN_VERSIONS.currentVersion;var delay=_okta.delay,extend=_okta.extend,filter=_okta.filter,find=_okta.find,where=_okta.where,defer=Okta.Q.defer,EventsMixin=Okta.Events,curry2=Okta.fn.base.curry2,always=Okta.fn.base.always,getMonitoredSitesApiMatchPatterns=Okta.fn.url.getMonitoredSitesApiMatchPatterns,isOktaEndUserHomeHref=Okta.fn.url.isOktaEndUserHomeHref,findAuthSite=Okta.fn.bg.findAuthSite,getLastAuthTimestamp=Okta.fn.bg.getLastAuthTimestamp,setLastAuthTimestamp=Okta.fn.bg.setLastAuthTimestamp,getBasicAuthCreds=Okta.fn.bg.getBasicAuthCreds,getPendingConsentAccount=Okta.fn.bg.getPendingConsentAccount,Url=Okta.Url,sharedJSFile="shared/shared.js",isChrome=browserType==="chrome",isFirefox=browserType==="firefox",isEdge=browserType==="edge",authenticationMonitor=new Okta.AuthenticationMonitor(session,persistent,request,browserType),that=extend({},EventsMixin);var BASIC_AUTH_WAIT=2*1e3,MONITORED_SITES_STORAGE_WAIT=1e3;function getTab(e){var t=defer();chrome.tabs.query({},function n(r){var o=where(r,{id:e}).length>0;if(o){chrome.tabs.get(e,function i(e){t.resolve(e)})}else{t.resolve(null)}});return t.promise}function isInvalidTab(e){return!e||!/^http/.test(e.url)}function triggerInject(e){getTab(e.tabId).then(function t(n){if(isInvalidTab(n)){return}that.trigger("injectReady",{tabId:n.id,frameId:e.frameId,url:e.url})})}function triggerContentMessage(e,t){that.trigger("messageFromContent",{msg:t,tabId:e.sender&&e.sender.tab?e.sender.tab.id:-1,portInfo:{port:e}})}function onBeforeSendHeaders(e){var t="X-Okta-User-Agent-Extended",n="okta-browser-plugin/"+BACKGROUND_VERSION,r={requestHeaders:[]},o="X-Okta-User-Agent-Account-Data";if(e.requestHeaders){r.requestHeaders=e.requestHeaders}try{if(isOktaEndUserHomeHref&&isOktaEndUserHomeHref(e.url)){var i=find(r.requestHeaders,function(e){return e.name.toLowerCase()===t.toLowerCase()});var a=getPendingConsentAccount?getPendingConsentAccount(persistent):"";if(i){i.value+=" "+n}else{r.requestHeaders.push({name:t,value:n});r.requestHeaders.push({name:o,value:a})}}}catch(s){Log.error("WebExtension::onBeforeSendHeaders Error: "+s.message)}return r}function executeScript(tabId,script){var INJECT_IF_NO_OKTA=""+function(code){if(eval("typeof Okta === 'undefined'")){eval("window.Okta = {};");eval(code);console.log("WebExtension::executeScript: content script injected")}else{console.log("WebExtension::executeScript: skipping eval script")}}.toString();chrome.tabs.executeScript(tabId,{code:"("+INJECT_IF_NO_OKTA+")("+JSON.stringify(script)+")",allFrames:true,runAt:"document_idle"},function(){})}function injectScriptForChrome(e,t){var n={frameId:e.frameId,runAt:"document_idle",matchAboutBlank:false};if(t){n.code=t;Log.info("WebExtension::injectScriptForChrome: Injecting content "+"script from persistent")}else{n.file="shared/shared.js";Log.info("WebExtension::injectScriptForChrome: Injecting content "+"script from file")}var r="(function () {      return (typeof Okta === 'undefined');    })();";var o={frameId:e.frameId,runAt:"document_idle",matchAboutBlank:false};o.code=r;chrome.tabs.executeScript(e.tabId,o,function(t){if(chrome.runtime.lastError){return}var r=typeof t==="undefined"?false:t[0];if(r){chrome.tabs.executeScript(e.tabId,n,function(e){if(chrome.runtime.lastError){return}})}})}function injectScript(e,t){if(t){Log.info("WebExtension::injectScript: Injecting content script from "+"persistent");executeScript(e.tabId,t)}else{Log.info("WebExtension::injectScript: Injecting content script from "+"file");var n=new XMLHttpRequest;n.open("GET",chrome.extension.getURL(sharedJSFile),true);n.overrideMimeType("text/plain");n.onload=function(){executeScript(e.tabId,n.responseText)};n.onerror=function(){Log.error("WebExtension::injectScript: Failed to load file: "+sharedJSFile)};n.send()}}function onAuthRequiredWithCallBack(e,t){onAuthRequired(e).then(function(e){t(e)}).catch(function(){t()})}function onAuthRequired(e){var t,n;t=findAuthSite(persistent,new Url(e.url));if(!t||!t.credURI){return Promise.reject()}n=getLastAuthTimestamp(session,t.authURL);if(e.timeStamp-n<BASIC_AUTH_WAIT){return Promise.reject()}setLastAuthTimestamp(session,t.authURL,e.timeStamp);return new Promise(function(e,n){getBasicAuthCreds(request,persistent,t.credURI).then(function(t){if(t&&t.u&&t.p){e({authCredentials:{username:t.u,password:t.p}})}else{n()}}).fail(n)})}function onMonitoredSitesCompleted(){delay(function(){authenticationMonitor.initialize()},MONITORED_SITES_STORAGE_WAIT)}that.getType=always(browserType);that.getBackgroundVersion=always(BACKGROUND_VERSION);that.post=function e(t){t.portInfo.port.postMessage(t.msg)};that.injectScript=function(e,t){if(isChrome){injectScriptForChrome(e,t)}else{injectScript(e,t)}};that.openTab=function(e){if(!e){return}switch(browserType){case"chrome":chrome.tabs.create({url:e});break;case"edge":chrome.tabs.create({url:e.split("?")[0]});break;case"firefox":chrome.tabs.create({url:e});var t=chrome.extension.getViews({type:"popup"});if(t.length!=1){Log.warn("WebExtension::openTab: "+"Did not close popup. Windows count: "+t.length);return}t[0].close();break;default:Log.error("WebExtension::openTab: Unknown browser type!")}};that.openTabForAccountChooser=function(e){if(e){chrome.tabs.query({active:true},function(t){if(t&&t.length>0){var n=t[0];if(n.url.indexOf(e)>-1){chrome.tabs.reload()}else{chrome.tabs.create({url:e})}}else{chrome.tabs.create({url:e})}})}};that.closeTab=function(e){if(e){chrome.tabs.remove(e)}};that.getCookies=function(e,t){var n=defer();chrome.cookies.getAll({url:e},function(e){var r=filter(e,function(e){return t.indexOf(e.name)>-1});n.resolve(r)});return n.promise};that.getLocalStorageUsage=function(){var e=defer(),t=0;try{for(var n=0;n<localStorage.length;++n){t+=localStorage.getItem(localStorage.key(n)).length}Log.info("WebExtension::getLocalStorageUsage: {0} bytes used",t);e.resolve(t)}catch(r){Log.error("WebExtension::getLocalStorageUsage Error: {0}",r);e.reject(r)}return e.promise};var onMessage=curry2(triggerContentMessage),onConnect=chrome.extension.onConnect,onCompleted=chrome.webRequest.onCompleted,onTabReplaced=chrome.webNavigation.onTabReplaced,onBeforeSendHeadersDetails={urls:["<all_urls>"]},onAuthRequiredListener=onAuthRequiredWithCallBack,onAuthRequiredInfoSpec=["asyncBlocking"];if(isFirefox){onConnect=chrome.runtime.onConnect;onTabReplaced=null;onAuthRequiredListener=onAuthRequired;onAuthRequiredInfoSpec=["blocking"]}if(isEdge){onBeforeSendHeadersDetails.types=["main_frame","sub_frame"];onCompleted=chrome.webNavigation.onCompleted}chrome.webNavigation.onDOMContentLoaded.addListener(triggerInject);if(onTabReplaced){onTabReplaced.addListener(triggerInject)}chrome.webRequest.onBeforeSendHeaders.addListener(onBeforeSendHeaders,onBeforeSendHeadersDetails,["requestHeaders","blocking"]);onConnect.addListener(function t(e){e.onMessage.addListener(onMessage(e))});chrome.webRequest.onAuthRequired&&chrome.webRequest.onAuthRequired.addListener(onAuthRequiredListener,{urls:["<all_urls>"]},onAuthRequiredInfoSpec);onCompleted&&onCompleted.addListener(onMonitoredSitesCompleted,{urls:getMonitoredSitesApiMatchPatterns(),types:["xmlhttprequest"]});authenticationMonitor.initialize();return that};